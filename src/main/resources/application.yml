micronaut:
  application:
    name: mnStockBroker
  server:
    port: 8080
    router:
      static-resources:
        swagger:
          paths: classpath:META-INF/swagger
          mapping: /swagger/**
        redoc:
          paths: classpath:META-INF/swagger/views/redoc
          mapping: /redoc/**
        rapidoc:
          paths: classpath:META-INF/swagger/views/rapidoc
          mapping: /rapidoc/**
        swagger-ui:
          paths: classpath:META-INF/swagger/views/swagger-ui
          mapping: /swagger-ui/**
  security:
    authentication: bearer
    token:
      jwt:
        signatures:
          secret:
            generator:
              secret: pleaseChangeThisSecretForANewOne
hello:
  controller:
    path: "/hello"
  service:
    greeting: "Hello from Service!"
  config:
    greeting:
      de: "Hallo"
      en: "Hello"
flyway:
  datasources:
    default:
      enabled: true
      clean-schema: false
      url: jdbc:postgresql://localhost:5432/mn_stock_broker
      driverClassName: org.postgresql.Driver
      username: illusionist
      password: 'illusion'
datasources:
  default:
    url: jdbc:postgresql://localhost:5432/mn_stock_broker
    driverClassName: org.postgresql.Driver
    username: illusionist
    password: 'illusion'
    schema-generate: NONE
    dialect: POSTGRES
# micronaut-data-jpa
jpa:
  default:
    packages-to-scan:
      - "illusionist.broker.persistence"
    properties:
      hibernate:
        show_sql: false
        hbm2ddl.auto: update
# JSON Settings
jackson:
  # property-naming-strategy: SNAKE_CASE
  serialization:
    writeDatesAsTimestamps: false
    writeDatesWithZoneId: true
    writeDateTimestampsAsNanoseconds: false
  deserialization:
    failOnUnknownProperties: false
  generator:
    writeNumbersAsStrings: false
    writeBigDecimalAsPlain: false